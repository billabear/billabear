<?php

declare(strict_types=1);

/*
 * Copyright Iain Cambridge 2023.
 *
 * Use of this software is governed by the Business Source License included in the LICENSE file and at https://github.com/BillaBear/billabear/blob/main/LICENSE.
 *
 * Change Date: TBD ( 3 years after 1.0.0 release )
 *
 * On the date above, in accordance with the Business Source License, use of this software will be governed by the open source license specified in the LICENSE file.
 */

namespace DoctrineMigrations;

use Doctrine\DBAL\Schema\Schema;
use Doctrine\Migrations\AbstractMigration;

/**
 * Auto-generated Migration: Please modify to your needs!
 */
final class Version20230527195318 extends AbstractMigration
{
    public function getDescription(): string
    {
        return '';
    }

    public function up(Schema $schema): void
    {
        // this up() migration is auto-generated, please modify it to your needs
        $this->addSql('CREATE TABLE api_key (id UUID NOT NULL, name VARCHAR(255) NOT NULL, key VARCHAR(255) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, updated_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, expires_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, active BOOLEAN NOT NULL, PRIMARY KEY(id))');
        $this->addSql('COMMENT ON COLUMN api_key.id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE brand_settings (id UUID NOT NULL, code VARCHAR(255) NOT NULL, brand_name VARCHAR(255) NOT NULL, email_address VARCHAR(255) NOT NULL, is_default BOOLEAN NOT NULL, address_company_name VARCHAR(255) DEFAULT NULL, address_street_line_one VARCHAR(255) DEFAULT NULL, address_street_line_two VARCHAR(255) DEFAULT NULL, address_city VARCHAR(255) DEFAULT NULL, address_region VARCHAR(255) DEFAULT NULL, address_country VARCHAR(255) DEFAULT NULL, address_postcode VARCHAR(255) DEFAULT NULL, notification_settings_subscription_creation BOOLEAN DEFAULT NULL, notification_settings_subscription_cancellation BOOLEAN DEFAULT NULL, notification_settings_expiring_card_warning BOOLEAN DEFAULT NULL, notification_settings_expiring_card_day_before BOOLEAN DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE UNIQUE INDEX UNIQ_227533D477153098 ON brand_settings (code)');
        $this->addSql('COMMENT ON COLUMN brand_settings.id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE cancellation_requests (id UUID NOT NULL, subscription_id UUID DEFAULT NULL, billing_admin_id UUID DEFAULT NULL, state VARCHAR(255) NOT NULL, when_to_cancel VARCHAR(255) NOT NULL, specific_date TIMESTAMP(0) WITH TIME ZONE DEFAULT NULL, refund_type VARCHAR(255) NOT NULL, comment VARCHAR(255) DEFAULT NULL, original_valid_until TIMESTAMP(0) WITH TIME ZONE NOT NULL, created_at TIMESTAMP(0) WITH TIME ZONE NOT NULL, error VARCHAR(255) DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE INDEX IDX_9E258B3E9A1887DC ON cancellation_requests (subscription_id)');
        $this->addSql('CREATE INDEX IDX_9E258B3E7CF7EBEC ON cancellation_requests (billing_admin_id)');
        $this->addSql('COMMENT ON COLUMN cancellation_requests.id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN cancellation_requests.subscription_id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN cancellation_requests.billing_admin_id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE charge_back (id UUID NOT NULL, payment_id UUID DEFAULT NULL, customer_id UUID DEFAULT NULL, external_reference VARCHAR(255) NOT NULL, status VARCHAR(255) NOT NULL, reason VARCHAR(255) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, updated_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE INDEX IDX_250DACE84C3A3BB ON charge_back (payment_id)');
        $this->addSql('CREATE INDEX IDX_250DACE89395C3F3 ON charge_back (customer_id)');
        $this->addSql('COMMENT ON COLUMN charge_back.id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN charge_back.payment_id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN charge_back.customer_id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE charge_back_amount_daily_stats (id UUID NOT NULL, amount INT NOT NULL, currency VARCHAR(255) NOT NULL, year INT NOT NULL, month INT NOT NULL, day INT NOT NULL, date DATE NOT NULL, brand_code VARCHAR(255) NOT NULL, PRIMARY KEY(id))');
        $this->addSql('COMMENT ON COLUMN charge_back_amount_daily_stats.id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE charge_back_amount_monthly_stats (id UUID NOT NULL, amount INT NOT NULL, currency VARCHAR(255) NOT NULL, year INT NOT NULL, month INT NOT NULL, day INT NOT NULL, date DATE NOT NULL, brand_code VARCHAR(255) NOT NULL, PRIMARY KEY(id))');
        $this->addSql('COMMENT ON COLUMN charge_back_amount_monthly_stats.id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE charge_back_amount_yearly_stats (id UUID NOT NULL, amount INT NOT NULL, currency VARCHAR(255) NOT NULL, year INT NOT NULL, month INT NOT NULL, day INT NOT NULL, date DATE NOT NULL, brand_code VARCHAR(255) NOT NULL, PRIMARY KEY(id))');
        $this->addSql('COMMENT ON COLUMN charge_back_amount_yearly_stats.id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE charge_back_creation (id UUID NOT NULL, charge_back_id UUID DEFAULT NULL, state VARCHAR(255) NOT NULL, created_at TIMESTAMP(0) WITH TIME ZONE NOT NULL, error VARCHAR(255) DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE INDEX IDX_3394E461BDB3CB55 ON charge_back_creation (charge_back_id)');
        $this->addSql('COMMENT ON COLUMN charge_back_creation.id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN charge_back_creation.charge_back_id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE credit (id UUID NOT NULL, customer_id UUID DEFAULT NULL, billing_admin_id UUID DEFAULT NULL, type VARCHAR(255) NOT NULL, creation_type VARCHAR(255) NOT NULL, amount INT NOT NULL, currency VARCHAR(255) NOT NULL, used_amount INT NOT NULL, completely_used BOOLEAN NOT NULL, reason VARCHAR(255) DEFAULT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, updated_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, valid_until TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE INDEX IDX_1CC16EFE9395C3F3 ON credit (customer_id)');
        $this->addSql('CREATE INDEX IDX_1CC16EFE7CF7EBEC ON credit (billing_admin_id)');
        $this->addSql('COMMENT ON COLUMN credit.id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN credit.customer_id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN credit.billing_admin_id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE customers (id UUID NOT NULL, brand_settings_id UUID DEFAULT NULL, reference VARCHAR(255) DEFAULT NULL, external_customer_reference VARCHAR(255) NOT NULL, billing_email VARCHAR(255) DEFAULT NULL, billing_type VARCHAR(255) NOT NULL, name VARCHAR(255) DEFAULT NULL, brand VARCHAR(255) NOT NULL, locale VARCHAR(255) NOT NULL, payment_provider_details_url VARCHAR(255) DEFAULT NULL, status VARCHAR(255) DEFAULT NULL, disabled BOOLEAN DEFAULT NULL, credit_amount INT DEFAULT NULL, credit_currency VARCHAR(255) DEFAULT NULL, billing_address_company_name VARCHAR(255) DEFAULT NULL, billing_address_street_line_one VARCHAR(255) DEFAULT NULL, billing_address_street_line_two VARCHAR(255) DEFAULT NULL, billing_address_city VARCHAR(255) DEFAULT NULL, billing_address_region VARCHAR(255) DEFAULT NULL, billing_address_country VARCHAR(255) DEFAULT NULL, billing_address_postcode VARCHAR(255) DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE INDEX IDX_62534E2138C5B87D ON customers (brand_settings_id)');
        $this->addSql('COMMENT ON COLUMN customers.id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN customers.brand_settings_id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE email_templates (id UUID NOT NULL, brand_id UUID DEFAULT NULL, name VARCHAR(255) NOT NULL, locale VARCHAR(255) NOT NULL, subject VARCHAR(255) DEFAULT NULL, use_emsp_template BOOLEAN NOT NULL, template_id VARCHAR(255) DEFAULT NULL, template_body TEXT DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE INDEX IDX_6023E2A544F5D008 ON email_templates (brand_id)');
        $this->addSql('CREATE UNIQUE INDEX name_locale ON email_templates (name, locale)');
        $this->addSql('COMMENT ON COLUMN email_templates.id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN email_templates.brand_id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE expiring_card_process (id UUID NOT NULL, customer_id UUID DEFAULT NULL, payment_card_id UUID DEFAULT NULL, state VARCHAR(255) NOT NULL, created_at TIMESTAMP(0) WITH TIME ZONE NOT NULL, updated_at TIMESTAMP(0) WITH TIME ZONE NOT NULL, subscription_charged_at TIMESTAMP(0) WITH TIME ZONE NOT NULL, error VARCHAR(255) DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE INDEX IDX_CD6C5DF9395C3F3 ON expiring_card_process (customer_id)');
        $this->addSql('CREATE UNIQUE INDEX UNIQ_CD6C5DF538594CA ON expiring_card_process (payment_card_id)');
        $this->addSql('COMMENT ON COLUMN expiring_card_process.id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN expiring_card_process.customer_id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN expiring_card_process.payment_card_id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE forgot_password_code (id UUID NOT NULL, user_id UUID DEFAULT NULL, code VARCHAR(255) NOT NULL, used BOOLEAN NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, expires_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, used_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE INDEX IDX_B30A7571A76ED395 ON forgot_password_code (user_id)');
        $this->addSql('COMMENT ON COLUMN forgot_password_code.id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN forgot_password_code.user_id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE generic_background_task (id UUID NOT NULL, status VARCHAR(255) NOT NULL, task VARCHAR(255) NOT NULL, meta JSON NOT NULL, created_at TIMESTAMP(0) WITH TIME ZONE NOT NULL, updated_at TIMESTAMP(0) WITH TIME ZONE NOT NULL, PRIMARY KEY(id))');
        $this->addSql('COMMENT ON COLUMN generic_background_task.id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE invite_codes (id UUID NOT NULL, user_id UUID DEFAULT NULL, invited_user_id UUID DEFAULT NULL, code VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, used BOOLEAN NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, used_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, cancelled BOOLEAN NOT NULL, role VARCHAR(255) DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE INDEX IDX_E8D89FB2A76ED395 ON invite_codes (user_id)');
        $this->addSql('CREATE INDEX IDX_E8D89FB2C58DAD6E ON invite_codes (invited_user_id)');
        $this->addSql('COMMENT ON COLUMN invite_codes.id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN invite_codes.user_id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN invite_codes.invited_user_id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE invoice (id UUID NOT NULL, customer_id UUID DEFAULT NULL, invoice_number VARCHAR(255) NOT NULL, valid BOOLEAN NOT NULL, comment VARCHAR(255) DEFAULT NULL, currency VARCHAR(255) NOT NULL, amount_due INT NOT NULL, total INT NOT NULL, sub_total INT NOT NULL, vat_total INT NOT NULL, paid BOOLEAN NOT NULL, created_at TIMESTAMP(0) WITH TIME ZONE NOT NULL, paid_at TIMESTAMP(0) WITH TIME ZONE DEFAULT NULL, updated_at TIMESTAMP(0) WITH TIME ZONE NOT NULL, biller_address_company_name VARCHAR(255) DEFAULT NULL, biller_address_street_line_one VARCHAR(255) DEFAULT NULL, biller_address_street_line_two VARCHAR(255) DEFAULT NULL, biller_address_city VARCHAR(255) DEFAULT NULL, biller_address_region VARCHAR(255) DEFAULT NULL, biller_address_country VARCHAR(255) DEFAULT NULL, biller_address_postcode VARCHAR(255) DEFAULT NULL, payee_address_company_name VARCHAR(255) DEFAULT NULL, payee_address_street_line_one VARCHAR(255) DEFAULT NULL, payee_address_street_line_two VARCHAR(255) DEFAULT NULL, payee_address_city VARCHAR(255) DEFAULT NULL, payee_address_region VARCHAR(255) DEFAULT NULL, payee_address_country VARCHAR(255) DEFAULT NULL, payee_address_postcode VARCHAR(255) DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE UNIQUE INDEX UNIQ_906517442DA68207 ON invoice (invoice_number)');
        $this->addSql('CREATE INDEX IDX_906517449395C3F3 ON invoice (customer_id)');
        $this->addSql('COMMENT ON COLUMN invoice.id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN invoice.customer_id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE invoice_subscription (invoice_id UUID NOT NULL, subscription_id UUID NOT NULL, PRIMARY KEY(invoice_id, subscription_id))');
        $this->addSql('CREATE INDEX IDX_1C014BA72989F1FD ON invoice_subscription (invoice_id)');
        $this->addSql('CREATE INDEX IDX_1C014BA79A1887DC ON invoice_subscription (subscription_id)');
        $this->addSql('COMMENT ON COLUMN invoice_subscription.invoice_id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN invoice_subscription.subscription_id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE invoice_payment (invoice_id UUID NOT NULL, payment_id UUID NOT NULL, PRIMARY KEY(invoice_id, payment_id))');
        $this->addSql('CREATE INDEX IDX_9FF1B2DE2989F1FD ON invoice_payment (invoice_id)');
        $this->addSql('CREATE INDEX IDX_9FF1B2DE4C3A3BB ON invoice_payment (payment_id)');
        $this->addSql('COMMENT ON COLUMN invoice_payment.invoice_id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN invoice_payment.payment_id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE invoice_line (id UUID NOT NULL, invoice_id UUID DEFAULT NULL, currency VARCHAR(255) NOT NULL, total INT NOT NULL, sub_total INT NOT NULL, vat_total INT NOT NULL, vat_percentage BOOLEAN NOT NULL, description VARCHAR(255) DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE INDEX IDX_D3D1D6932989F1FD ON invoice_line (invoice_id)');
        $this->addSql('COMMENT ON COLUMN invoice_line.id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN invoice_line.invoice_id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE payment (id UUID NOT NULL, customer_id UUID DEFAULT NULL, provider VARCHAR(255) NOT NULL, payment_reference VARCHAR(255) NOT NULL, description VARCHAR(255) DEFAULT NULL, status VARCHAR(255) NOT NULL, amount INT NOT NULL, currency VARCHAR(255) NOT NULL, refunded BOOLEAN NOT NULL, completed BOOLEAN NOT NULL, charged_back BOOLEAN NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, updated_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, payment_provider_details_url VARCHAR(255) DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE INDEX IDX_6D28840D9395C3F3 ON payment (customer_id)');
        $this->addSql('COMMENT ON COLUMN payment.id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN payment.customer_id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE payment_subscription (payment_id UUID NOT NULL, subscription_id UUID NOT NULL, PRIMARY KEY(payment_id, subscription_id))');
        $this->addSql('CREATE INDEX IDX_C536D3C94C3A3BB ON payment_subscription (payment_id)');
        $this->addSql('CREATE INDEX IDX_C536D3C99A1887DC ON payment_subscription (subscription_id)');
        $this->addSql('COMMENT ON COLUMN payment_subscription.payment_id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN payment_subscription.subscription_id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE payment_amount_daily_stats (id UUID NOT NULL, amount INT NOT NULL, currency VARCHAR(255) NOT NULL, year INT NOT NULL, month INT NOT NULL, day INT NOT NULL, date DATE NOT NULL, brand_code VARCHAR(255) NOT NULL, PRIMARY KEY(id))');
        $this->addSql('COMMENT ON COLUMN payment_amount_daily_stats.id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE payment_amount_monthly_stats (id UUID NOT NULL, amount INT NOT NULL, currency VARCHAR(255) NOT NULL, year INT NOT NULL, month INT NOT NULL, day INT NOT NULL, date DATE NOT NULL, brand_code VARCHAR(255) NOT NULL, PRIMARY KEY(id))');
        $this->addSql('COMMENT ON COLUMN payment_amount_monthly_stats.id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE payment_amount_yearly_stats (id UUID NOT NULL, amount INT NOT NULL, currency VARCHAR(255) NOT NULL, year INT NOT NULL, month INT NOT NULL, day INT NOT NULL, date DATE NOT NULL, brand_code VARCHAR(255) NOT NULL, PRIMARY KEY(id))');
        $this->addSql('COMMENT ON COLUMN payment_amount_yearly_stats.id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE payment_card (id UUID NOT NULL, customer_id UUID DEFAULT NULL, provider VARCHAR(255) DEFAULT NULL, stored_customer_reference VARCHAR(255) DEFAULT NULL, stored_payment_reference VARCHAR(255) DEFAULT NULL, default_payment_option BOOLEAN NOT NULL, brand VARCHAR(255) DEFAULT NULL, name VARCHAR(255) DEFAULT NULL, last_four VARCHAR(255) DEFAULT NULL, expiry_month VARCHAR(255) DEFAULT NULL, expiry_year VARCHAR(255) DEFAULT NULL, is_deleted BOOLEAN NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE INDEX IDX_37970FA79395C3F3 ON payment_card (customer_id)');
        $this->addSql('COMMENT ON COLUMN payment_card.id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN payment_card.customer_id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE payment_creation (id UUID NOT NULL, payment_id UUID DEFAULT NULL, state VARCHAR(255) NOT NULL, created_at TIMESTAMP(0) WITH TIME ZONE NOT NULL, error VARCHAR(255) DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE INDEX IDX_1728C71C4C3A3BB ON payment_creation (payment_id)');
        $this->addSql('COMMENT ON COLUMN payment_creation.id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN payment_creation.payment_id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE payment_failure_process (id UUID NOT NULL, payment_id UUID DEFAULT NULL, customer_id UUID DEFAULT NULL, state VARCHAR(255) NOT NULL, retry_count INT NOT NULL, resolved BOOLEAN NOT NULL, next_attempt_at TIMESTAMP(0) WITH TIME ZONE DEFAULT NULL, created_at TIMESTAMP(0) WITH TIME ZONE NOT NULL, updated_at TIMESTAMP(0) WITH TIME ZONE NOT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE INDEX IDX_F939A8484C3A3BB ON payment_failure_process (payment_id)');
        $this->addSql('CREATE INDEX IDX_F939A8489395C3F3 ON payment_failure_process (customer_id)');
        $this->addSql('COMMENT ON COLUMN payment_failure_process.id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN payment_failure_process.payment_id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN payment_failure_process.customer_id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE price (id UUID NOT NULL, product_id UUID DEFAULT NULL, amount INT NOT NULL, currency VARCHAR(255) NOT NULL, recurring BOOLEAN DEFAULT NULL, public BOOLEAN DEFAULT NULL, is_deleted BOOLEAN DEFAULT NULL, schedule VARCHAR(255) DEFAULT NULL, external_reference VARCHAR(255) DEFAULT NULL, payment_provider_details_url VARCHAR(255) DEFAULT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, deleted_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE INDEX IDX_CAC822D94584665A ON price (product_id)');
        $this->addSql('COMMENT ON COLUMN price.id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN price.product_id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE product (id UUID NOT NULL, name VARCHAR(255) NOT NULL, payment_provider_details_url VARCHAR(255) DEFAULT NULL, external_reference VARCHAR(255) DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('COMMENT ON COLUMN product.id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE receipt (id UUID NOT NULL, customer_id UUID DEFAULT NULL, valid BOOLEAN NOT NULL, currency VARCHAR(255) NOT NULL, total INT NOT NULL, sub_total INT NOT NULL, vat_total INT NOT NULL, comment VARCHAR(255) DEFAULT NULL, vat_percentage DOUBLE PRECISION NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, biller_address_company_name VARCHAR(255) DEFAULT NULL, biller_address_street_line_one VARCHAR(255) DEFAULT NULL, biller_address_street_line_two VARCHAR(255) DEFAULT NULL, biller_address_city VARCHAR(255) DEFAULT NULL, biller_address_region VARCHAR(255) DEFAULT NULL, biller_address_country VARCHAR(255) DEFAULT NULL, biller_address_postcode VARCHAR(255) DEFAULT NULL, payee_address_company_name VARCHAR(255) DEFAULT NULL, payee_address_street_line_one VARCHAR(255) DEFAULT NULL, payee_address_street_line_two VARCHAR(255) DEFAULT NULL, payee_address_city VARCHAR(255) DEFAULT NULL, payee_address_region VARCHAR(255) DEFAULT NULL, payee_address_country VARCHAR(255) DEFAULT NULL, payee_address_postcode VARCHAR(255) DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE INDEX IDX_5399B6459395C3F3 ON receipt (customer_id)');
        $this->addSql('COMMENT ON COLUMN receipt.id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN receipt.customer_id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE receipt_payment (receipt_id UUID NOT NULL, payment_id UUID NOT NULL, PRIMARY KEY(receipt_id, payment_id))');
        $this->addSql('CREATE INDEX IDX_7E6221F32B5CA896 ON receipt_payment (receipt_id)');
        $this->addSql('CREATE INDEX IDX_7E6221F34C3A3BB ON receipt_payment (payment_id)');
        $this->addSql('COMMENT ON COLUMN receipt_payment.receipt_id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN receipt_payment.payment_id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE receipt_subscription (receipt_id UUID NOT NULL, subscription_id UUID NOT NULL, PRIMARY KEY(receipt_id, subscription_id))');
        $this->addSql('CREATE INDEX IDX_32952A5C2B5CA896 ON receipt_subscription (receipt_id)');
        $this->addSql('CREATE INDEX IDX_32952A5C9A1887DC ON receipt_subscription (subscription_id)');
        $this->addSql('COMMENT ON COLUMN receipt_subscription.receipt_id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN receipt_subscription.subscription_id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE receipt_line (id UUID NOT NULL, receipt_id UUID DEFAULT NULL, currency VARCHAR(255) NOT NULL, total INT NOT NULL, sub_total INT NOT NULL, vat_total INT NOT NULL, description VARCHAR(255) DEFAULT NULL, vat_percentage DOUBLE PRECISION NOT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE INDEX IDX_476F8F7A2B5CA896 ON receipt_line (receipt_id)');
        $this->addSql('COMMENT ON COLUMN receipt_line.id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN receipt_line.receipt_id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE refund (id UUID NOT NULL, payment_id UUID DEFAULT NULL, customer_id UUID DEFAULT NULL, billing_admin_id UUID DEFAULT NULL, amount INT NOT NULL, currency VARCHAR(255) NOT NULL, status VARCHAR(255) NOT NULL, external_reference VARCHAR(255) NOT NULL, reason VARCHAR(255) DEFAULT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE INDEX IDX_5B2C14584C3A3BB ON refund (payment_id)');
        $this->addSql('CREATE INDEX IDX_5B2C14589395C3F3 ON refund (customer_id)');
        $this->addSql('CREATE INDEX IDX_5B2C14587CF7EBEC ON refund (billing_admin_id)');
        $this->addSql('COMMENT ON COLUMN refund.id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN refund.payment_id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN refund.customer_id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN refund.billing_admin_id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE refund_amount_daily_stats (id UUID NOT NULL, amount INT NOT NULL, currency VARCHAR(255) NOT NULL, year INT NOT NULL, month INT NOT NULL, day INT NOT NULL, date DATE NOT NULL, brand_code VARCHAR(255) NOT NULL, PRIMARY KEY(id))');
        $this->addSql('COMMENT ON COLUMN refund_amount_daily_stats.id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE refund_amount_monthly_stats (id UUID NOT NULL, amount INT NOT NULL, currency VARCHAR(255) NOT NULL, year INT NOT NULL, month INT NOT NULL, day INT NOT NULL, date DATE NOT NULL, brand_code VARCHAR(255) NOT NULL, PRIMARY KEY(id))');
        $this->addSql('COMMENT ON COLUMN refund_amount_monthly_stats.id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE refund_amount_yearly_stats (id UUID NOT NULL, amount INT NOT NULL, currency VARCHAR(255) NOT NULL, year INT NOT NULL, month INT NOT NULL, day INT NOT NULL, date DATE NOT NULL, brand_code VARCHAR(255) NOT NULL, PRIMARY KEY(id))');
        $this->addSql('COMMENT ON COLUMN refund_amount_yearly_stats.id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE refund_created_process (id UUID NOT NULL, refund_id UUID DEFAULT NULL, state VARCHAR(255) NOT NULL, created_at TIMESTAMP(0) WITH TIME ZONE NOT NULL, updated_at TIMESTAMP(0) WITH TIME ZONE NOT NULL, error VARCHAR(255) DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE INDEX IDX_C12A211C189801D5 ON refund_created_process (refund_id)');
        $this->addSql('COMMENT ON COLUMN refund_created_process.id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN refund_created_process.refund_id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE settings (id UUID NOT NULL, tag VARCHAR(255) NOT NULL, notification_settings_send_customer_notifications BOOLEAN DEFAULT NULL, notification_settings_emsp VARCHAR(255) DEFAULT NULL, notification_settings_emsp_api_key VARCHAR(255) DEFAULT NULL, notification_settings_emsp_api_url VARCHAR(255) DEFAULT NULL, notification_settings_emsp_domain VARCHAR(255) DEFAULT NULL, notification_settings_default_outgoing_email VARCHAR(255) DEFAULT NULL, system_settings_webhook_url VARCHAR(255) DEFAULT NULL, system_settings_system_url VARCHAR(255) DEFAULT NULL, system_settings_timezone VARCHAR(255) DEFAULT NULL, system_settings_use_stripe_billing BOOLEAN NOT NULL, system_settings_webhook_external_reference VARCHAR(255) DEFAULT NULL, onboarding_settings_has_stripe_imports BOOLEAN DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('COMMENT ON COLUMN settings.id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE stripe_import (id UUID NOT NULL, state VARCHAR(255) NOT NULL, last_id VARCHAR(255) DEFAULT NULL, complete BOOLEAN NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, updated_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, error VARCHAR(255) DEFAULT NULL, attempts INT NOT NULL, PRIMARY KEY(id))');
        $this->addSql('COMMENT ON COLUMN stripe_import.id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE subscription (id UUID NOT NULL, payment_details_id UUID DEFAULT NULL, price_id UUID DEFAULT NULL, subscription_plan_id UUID DEFAULT NULL, customer_id UUID DEFAULT NULL, plan_name VARCHAR(255) DEFAULT NULL, payment_schedule VARCHAR(255) DEFAULT NULL, seats INT DEFAULT NULL, active BOOLEAN DEFAULT NULL, status VARCHAR(255) NOT NULL, amount INT DEFAULT NULL, has_trial BOOLEAN NOT NULL, trial_length_days INT DEFAULT NULL, currency VARCHAR(255) DEFAULT NULL, main_external_reference VARCHAR(255) DEFAULT NULL, main_external_reference_details_url VARCHAR(255) DEFAULT NULL, child_external_reference VARCHAR(255) DEFAULT NULL, started_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, valid_until TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, start_of_current_period TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, updated_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, ended_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE INDEX IDX_A3C664D38EEC86F7 ON subscription (payment_details_id)');
        $this->addSql('CREATE INDEX IDX_A3C664D3D614C7E7 ON subscription (price_id)');
        $this->addSql('CREATE INDEX IDX_A3C664D39B8CE200 ON subscription (subscription_plan_id)');
        $this->addSql('CREATE INDEX IDX_A3C664D39395C3F3 ON subscription (customer_id)');
        $this->addSql('COMMENT ON COLUMN subscription.id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN subscription.payment_details_id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN subscription.price_id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN subscription.subscription_plan_id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN subscription.customer_id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE subscription_payment (subscription_id UUID NOT NULL, payment_id UUID NOT NULL, PRIMARY KEY(subscription_id, payment_id))');
        $this->addSql('CREATE INDEX IDX_1E3D64969A1887DC ON subscription_payment (subscription_id)');
        $this->addSql('CREATE INDEX IDX_1E3D64964C3A3BB ON subscription_payment (payment_id)');
        $this->addSql('COMMENT ON COLUMN subscription_payment.subscription_id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN subscription_payment.payment_id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE subscription_cancellation_daily_stats (id UUID NOT NULL, count INT NOT NULL, year INT NOT NULL, month INT NOT NULL, day INT NOT NULL, date DATE NOT NULL, brand_code VARCHAR(255) NOT NULL, PRIMARY KEY(id))');
        $this->addSql('COMMENT ON COLUMN subscription_cancellation_daily_stats.id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE subscription_cancellation_monthly_stats (id UUID NOT NULL, count INT NOT NULL, year INT NOT NULL, month INT NOT NULL, day INT NOT NULL, date DATE NOT NULL, brand_code VARCHAR(255) NOT NULL, PRIMARY KEY(id))');
        $this->addSql('COMMENT ON COLUMN subscription_cancellation_monthly_stats.id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE subscription_cancellation_yearly_stats (id UUID NOT NULL, count INT NOT NULL, year INT NOT NULL, month INT NOT NULL, day INT NOT NULL, date DATE NOT NULL, brand_code VARCHAR(255) NOT NULL, PRIMARY KEY(id))');
        $this->addSql('COMMENT ON COLUMN subscription_cancellation_yearly_stats.id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE subscription_creation (id UUID NOT NULL, subscription_id UUID DEFAULT NULL, state VARCHAR(255) NOT NULL, created_at TIMESTAMP(0) WITH TIME ZONE NOT NULL, error VARCHAR(255) DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE INDEX IDX_3040DA589A1887DC ON subscription_creation (subscription_id)');
        $this->addSql('COMMENT ON COLUMN subscription_creation.id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN subscription_creation.subscription_id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE subscription_daily_stats (id UUID NOT NULL, count INT NOT NULL, year INT NOT NULL, month INT NOT NULL, day INT NOT NULL, date DATE NOT NULL, brand_code VARCHAR(255) NOT NULL, PRIMARY KEY(id))');
        $this->addSql('COMMENT ON COLUMN subscription_daily_stats.id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE subscription_feature (id UUID NOT NULL, code VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, description VARCHAR(255) DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE UNIQUE INDEX UNIQ_6CC295FD77153098 ON subscription_feature (code)');
        $this->addSql('COMMENT ON COLUMN subscription_feature.id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE subscription_monthly_stats (id UUID NOT NULL, count INT NOT NULL, year INT NOT NULL, month INT NOT NULL, day INT NOT NULL, date DATE NOT NULL, brand_code VARCHAR(255) NOT NULL, PRIMARY KEY(id))');
        $this->addSql('COMMENT ON COLUMN subscription_monthly_stats.id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE subscription_plan (id UUID NOT NULL, product_id UUID DEFAULT NULL, public BOOLEAN NOT NULL, name VARCHAR(255) NOT NULL, external_reference VARCHAR(255) DEFAULT NULL, payment_provider_details_url VARCHAR(255) DEFAULT NULL, per_seat BOOLEAN DEFAULT NULL, is_free BOOLEAN DEFAULT NULL, user_count INT DEFAULT NULL, has_trial BOOLEAN DEFAULT NULL, trial_length_days INT DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE INDEX IDX_EA664B634584665A ON subscription_plan (product_id)');
        $this->addSql('COMMENT ON COLUMN subscription_plan.id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN subscription_plan.product_id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE subscription_plan_subscription_feature (subscription_plan_id UUID NOT NULL, subscription_feature_id UUID NOT NULL, PRIMARY KEY(subscription_plan_id, subscription_feature_id))');
        $this->addSql('CREATE INDEX IDX_63CBB01D9B8CE200 ON subscription_plan_subscription_feature (subscription_plan_id)');
        $this->addSql('CREATE INDEX IDX_63CBB01DA201F81C ON subscription_plan_subscription_feature (subscription_feature_id)');
        $this->addSql('COMMENT ON COLUMN subscription_plan_subscription_feature.subscription_plan_id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN subscription_plan_subscription_feature.subscription_feature_id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE subscription_plan_price (subscription_plan_id UUID NOT NULL, price_id UUID NOT NULL, PRIMARY KEY(subscription_plan_id, price_id))');
        $this->addSql('CREATE INDEX IDX_5B8B27409B8CE200 ON subscription_plan_price (subscription_plan_id)');
        $this->addSql('CREATE INDEX IDX_5B8B2740D614C7E7 ON subscription_plan_price (price_id)');
        $this->addSql('COMMENT ON COLUMN subscription_plan_price.subscription_plan_id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN subscription_plan_price.price_id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE subscription_plan_limit (id UUID NOT NULL, subscription_feature_id UUID DEFAULT NULL, subscription_plan_id UUID DEFAULT NULL, limit_number INT NOT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE INDEX IDX_EED5EDF9A201F81C ON subscription_plan_limit (subscription_feature_id)');
        $this->addSql('CREATE INDEX IDX_EED5EDF99B8CE200 ON subscription_plan_limit (subscription_plan_id)');
        $this->addSql('COMMENT ON COLUMN subscription_plan_limit.id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN subscription_plan_limit.subscription_feature_id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN subscription_plan_limit.subscription_plan_id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE subscription_yearly_stats (id UUID NOT NULL, count INT NOT NULL, year INT NOT NULL, month INT NOT NULL, day INT NOT NULL, date DATE NOT NULL, brand_code VARCHAR(255) NOT NULL, PRIMARY KEY(id))');
        $this->addSql('COMMENT ON COLUMN subscription_yearly_stats.id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE templates (id UUID NOT NULL, name VARCHAR(255) NOT NULL, content TEXT NOT NULL, brand VARCHAR(255) NOT NULL, PRIMARY KEY(id))');
        $this->addSql('COMMENT ON COLUMN templates.id IS \'(DC2Type:uuid)\'');
        $this->addSql('CREATE TABLE users (id UUID NOT NULL, email VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, name VARCHAR(255) DEFAULT NULL, confirmation_code VARCHAR(255) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, activated_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, deactivated_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, deleted_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, is_confirmed BOOLEAN NOT NULL, is_deleted BOOLEAN NOT NULL, roles TEXT DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('COMMENT ON COLUMN users.id IS \'(DC2Type:uuid)\'');
        $this->addSql('COMMENT ON COLUMN users.roles IS \'(DC2Type:simple_array)\'');
        $this->addSql('CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name)');
        $this->addSql('CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at)');
        $this->addSql('CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at)');
        $this->addSql('COMMENT ON COLUMN messenger_messages.created_at IS \'(DC2Type:datetime_immutable)\'');
        $this->addSql('COMMENT ON COLUMN messenger_messages.available_at IS \'(DC2Type:datetime_immutable)\'');
        $this->addSql('COMMENT ON COLUMN messenger_messages.delivered_at IS \'(DC2Type:datetime_immutable)\'');
        $this->addSql('CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$
            BEGIN
                PERFORM pg_notify(\'messenger_messages\', NEW.queue_name::text);
                RETURN NEW;
            END;
        $$ LANGUAGE plpgsql;');
        $this->addSql('DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages;');
        $this->addSql('CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages();');
        $this->addSql('ALTER TABLE cancellation_requests ADD CONSTRAINT FK_9E258B3E9A1887DC FOREIGN KEY (subscription_id) REFERENCES subscription (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE cancellation_requests ADD CONSTRAINT FK_9E258B3E7CF7EBEC FOREIGN KEY (billing_admin_id) REFERENCES users (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE charge_back ADD CONSTRAINT FK_250DACE84C3A3BB FOREIGN KEY (payment_id) REFERENCES payment (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE charge_back ADD CONSTRAINT FK_250DACE89395C3F3 FOREIGN KEY (customer_id) REFERENCES customers (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE charge_back_creation ADD CONSTRAINT FK_3394E461BDB3CB55 FOREIGN KEY (charge_back_id) REFERENCES charge_back (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE credit ADD CONSTRAINT FK_1CC16EFE9395C3F3 FOREIGN KEY (customer_id) REFERENCES customers (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE credit ADD CONSTRAINT FK_1CC16EFE7CF7EBEC FOREIGN KEY (billing_admin_id) REFERENCES users (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE customers ADD CONSTRAINT FK_62534E2138C5B87D FOREIGN KEY (brand_settings_id) REFERENCES brand_settings (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE email_templates ADD CONSTRAINT FK_6023E2A544F5D008 FOREIGN KEY (brand_id) REFERENCES brand_settings (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE expiring_card_process ADD CONSTRAINT FK_CD6C5DF9395C3F3 FOREIGN KEY (customer_id) REFERENCES customers (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE expiring_card_process ADD CONSTRAINT FK_CD6C5DF538594CA FOREIGN KEY (payment_card_id) REFERENCES payment_card (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE forgot_password_code ADD CONSTRAINT FK_B30A7571A76ED395 FOREIGN KEY (user_id) REFERENCES users (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE invite_codes ADD CONSTRAINT FK_E8D89FB2A76ED395 FOREIGN KEY (user_id) REFERENCES users (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE invite_codes ADD CONSTRAINT FK_E8D89FB2C58DAD6E FOREIGN KEY (invited_user_id) REFERENCES users (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE invoice ADD CONSTRAINT FK_906517449395C3F3 FOREIGN KEY (customer_id) REFERENCES customers (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE invoice_subscription ADD CONSTRAINT FK_1C014BA72989F1FD FOREIGN KEY (invoice_id) REFERENCES invoice (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE invoice_subscription ADD CONSTRAINT FK_1C014BA79A1887DC FOREIGN KEY (subscription_id) REFERENCES subscription (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE invoice_payment ADD CONSTRAINT FK_9FF1B2DE2989F1FD FOREIGN KEY (invoice_id) REFERENCES invoice (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE invoice_payment ADD CONSTRAINT FK_9FF1B2DE4C3A3BB FOREIGN KEY (payment_id) REFERENCES payment (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE invoice_line ADD CONSTRAINT FK_D3D1D6932989F1FD FOREIGN KEY (invoice_id) REFERENCES invoice (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE payment ADD CONSTRAINT FK_6D28840D9395C3F3 FOREIGN KEY (customer_id) REFERENCES customers (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE payment_subscription ADD CONSTRAINT FK_C536D3C94C3A3BB FOREIGN KEY (payment_id) REFERENCES payment (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE payment_subscription ADD CONSTRAINT FK_C536D3C99A1887DC FOREIGN KEY (subscription_id) REFERENCES subscription (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE payment_card ADD CONSTRAINT FK_37970FA79395C3F3 FOREIGN KEY (customer_id) REFERENCES customers (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE payment_creation ADD CONSTRAINT FK_1728C71C4C3A3BB FOREIGN KEY (payment_id) REFERENCES payment (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE payment_failure_process ADD CONSTRAINT FK_F939A8484C3A3BB FOREIGN KEY (payment_id) REFERENCES payment (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE payment_failure_process ADD CONSTRAINT FK_F939A8489395C3F3 FOREIGN KEY (customer_id) REFERENCES customers (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE price ADD CONSTRAINT FK_CAC822D94584665A FOREIGN KEY (product_id) REFERENCES product (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE receipt ADD CONSTRAINT FK_5399B6459395C3F3 FOREIGN KEY (customer_id) REFERENCES customers (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE receipt_payment ADD CONSTRAINT FK_7E6221F32B5CA896 FOREIGN KEY (receipt_id) REFERENCES receipt (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE receipt_payment ADD CONSTRAINT FK_7E6221F34C3A3BB FOREIGN KEY (payment_id) REFERENCES payment (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE receipt_subscription ADD CONSTRAINT FK_32952A5C2B5CA896 FOREIGN KEY (receipt_id) REFERENCES receipt (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE receipt_subscription ADD CONSTRAINT FK_32952A5C9A1887DC FOREIGN KEY (subscription_id) REFERENCES subscription (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE receipt_line ADD CONSTRAINT FK_476F8F7A2B5CA896 FOREIGN KEY (receipt_id) REFERENCES receipt (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE refund ADD CONSTRAINT FK_5B2C14584C3A3BB FOREIGN KEY (payment_id) REFERENCES payment (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE refund ADD CONSTRAINT FK_5B2C14589395C3F3 FOREIGN KEY (customer_id) REFERENCES customers (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE refund ADD CONSTRAINT FK_5B2C14587CF7EBEC FOREIGN KEY (billing_admin_id) REFERENCES users (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE refund_created_process ADD CONSTRAINT FK_C12A211C189801D5 FOREIGN KEY (refund_id) REFERENCES refund (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE subscription ADD CONSTRAINT FK_A3C664D38EEC86F7 FOREIGN KEY (payment_details_id) REFERENCES payment_card (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE subscription ADD CONSTRAINT FK_A3C664D3D614C7E7 FOREIGN KEY (price_id) REFERENCES price (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE subscription ADD CONSTRAINT FK_A3C664D39B8CE200 FOREIGN KEY (subscription_plan_id) REFERENCES subscription_plan (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE subscription ADD CONSTRAINT FK_A3C664D39395C3F3 FOREIGN KEY (customer_id) REFERENCES customers (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE subscription_payment ADD CONSTRAINT FK_1E3D64969A1887DC FOREIGN KEY (subscription_id) REFERENCES subscription (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE subscription_payment ADD CONSTRAINT FK_1E3D64964C3A3BB FOREIGN KEY (payment_id) REFERENCES payment (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE subscription_creation ADD CONSTRAINT FK_3040DA589A1887DC FOREIGN KEY (subscription_id) REFERENCES subscription (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE subscription_plan ADD CONSTRAINT FK_EA664B634584665A FOREIGN KEY (product_id) REFERENCES product (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE subscription_plan_subscription_feature ADD CONSTRAINT FK_63CBB01D9B8CE200 FOREIGN KEY (subscription_plan_id) REFERENCES subscription_plan (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE subscription_plan_subscription_feature ADD CONSTRAINT FK_63CBB01DA201F81C FOREIGN KEY (subscription_feature_id) REFERENCES subscription_feature (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE subscription_plan_price ADD CONSTRAINT FK_5B8B27409B8CE200 FOREIGN KEY (subscription_plan_id) REFERENCES subscription_plan (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE subscription_plan_price ADD CONSTRAINT FK_5B8B2740D614C7E7 FOREIGN KEY (price_id) REFERENCES price (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE subscription_plan_limit ADD CONSTRAINT FK_EED5EDF9A201F81C FOREIGN KEY (subscription_feature_id) REFERENCES subscription_feature (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE subscription_plan_limit ADD CONSTRAINT FK_EED5EDF99B8CE200 FOREIGN KEY (subscription_plan_id) REFERENCES subscription_plan (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
    }

    public function down(Schema $schema): void
    {
        // this down() migration is auto-generated, please modify it to your needs
        $this->addSql('CREATE SCHEMA public');
        $this->addSql('ALTER TABLE cancellation_requests DROP CONSTRAINT FK_9E258B3E9A1887DC');
        $this->addSql('ALTER TABLE cancellation_requests DROP CONSTRAINT FK_9E258B3E7CF7EBEC');
        $this->addSql('ALTER TABLE charge_back DROP CONSTRAINT FK_250DACE84C3A3BB');
        $this->addSql('ALTER TABLE charge_back DROP CONSTRAINT FK_250DACE89395C3F3');
        $this->addSql('ALTER TABLE charge_back_creation DROP CONSTRAINT FK_3394E461BDB3CB55');
        $this->addSql('ALTER TABLE credit DROP CONSTRAINT FK_1CC16EFE9395C3F3');
        $this->addSql('ALTER TABLE credit DROP CONSTRAINT FK_1CC16EFE7CF7EBEC');
        $this->addSql('ALTER TABLE customers DROP CONSTRAINT FK_62534E2138C5B87D');
        $this->addSql('ALTER TABLE email_templates DROP CONSTRAINT FK_6023E2A544F5D008');
        $this->addSql('ALTER TABLE expiring_card_process DROP CONSTRAINT FK_CD6C5DF9395C3F3');
        $this->addSql('ALTER TABLE expiring_card_process DROP CONSTRAINT FK_CD6C5DF538594CA');
        $this->addSql('ALTER TABLE forgot_password_code DROP CONSTRAINT FK_B30A7571A76ED395');
        $this->addSql('ALTER TABLE invite_codes DROP CONSTRAINT FK_E8D89FB2A76ED395');
        $this->addSql('ALTER TABLE invite_codes DROP CONSTRAINT FK_E8D89FB2C58DAD6E');
        $this->addSql('ALTER TABLE invoice DROP CONSTRAINT FK_906517449395C3F3');
        $this->addSql('ALTER TABLE invoice_subscription DROP CONSTRAINT FK_1C014BA72989F1FD');
        $this->addSql('ALTER TABLE invoice_subscription DROP CONSTRAINT FK_1C014BA79A1887DC');
        $this->addSql('ALTER TABLE invoice_payment DROP CONSTRAINT FK_9FF1B2DE2989F1FD');
        $this->addSql('ALTER TABLE invoice_payment DROP CONSTRAINT FK_9FF1B2DE4C3A3BB');
        $this->addSql('ALTER TABLE invoice_line DROP CONSTRAINT FK_D3D1D6932989F1FD');
        $this->addSql('ALTER TABLE payment DROP CONSTRAINT FK_6D28840D9395C3F3');
        $this->addSql('ALTER TABLE payment_subscription DROP CONSTRAINT FK_C536D3C94C3A3BB');
        $this->addSql('ALTER TABLE payment_subscription DROP CONSTRAINT FK_C536D3C99A1887DC');
        $this->addSql('ALTER TABLE payment_card DROP CONSTRAINT FK_37970FA79395C3F3');
        $this->addSql('ALTER TABLE payment_creation DROP CONSTRAINT FK_1728C71C4C3A3BB');
        $this->addSql('ALTER TABLE payment_failure_process DROP CONSTRAINT FK_F939A8484C3A3BB');
        $this->addSql('ALTER TABLE payment_failure_process DROP CONSTRAINT FK_F939A8489395C3F3');
        $this->addSql('ALTER TABLE price DROP CONSTRAINT FK_CAC822D94584665A');
        $this->addSql('ALTER TABLE receipt DROP CONSTRAINT FK_5399B6459395C3F3');
        $this->addSql('ALTER TABLE receipt_payment DROP CONSTRAINT FK_7E6221F32B5CA896');
        $this->addSql('ALTER TABLE receipt_payment DROP CONSTRAINT FK_7E6221F34C3A3BB');
        $this->addSql('ALTER TABLE receipt_subscription DROP CONSTRAINT FK_32952A5C2B5CA896');
        $this->addSql('ALTER TABLE receipt_subscription DROP CONSTRAINT FK_32952A5C9A1887DC');
        $this->addSql('ALTER TABLE receipt_line DROP CONSTRAINT FK_476F8F7A2B5CA896');
        $this->addSql('ALTER TABLE refund DROP CONSTRAINT FK_5B2C14584C3A3BB');
        $this->addSql('ALTER TABLE refund DROP CONSTRAINT FK_5B2C14589395C3F3');
        $this->addSql('ALTER TABLE refund DROP CONSTRAINT FK_5B2C14587CF7EBEC');
        $this->addSql('ALTER TABLE refund_created_process DROP CONSTRAINT FK_C12A211C189801D5');
        $this->addSql('ALTER TABLE subscription DROP CONSTRAINT FK_A3C664D38EEC86F7');
        $this->addSql('ALTER TABLE subscription DROP CONSTRAINT FK_A3C664D3D614C7E7');
        $this->addSql('ALTER TABLE subscription DROP CONSTRAINT FK_A3C664D39B8CE200');
        $this->addSql('ALTER TABLE subscription DROP CONSTRAINT FK_A3C664D39395C3F3');
        $this->addSql('ALTER TABLE subscription_payment DROP CONSTRAINT FK_1E3D64969A1887DC');
        $this->addSql('ALTER TABLE subscription_payment DROP CONSTRAINT FK_1E3D64964C3A3BB');
        $this->addSql('ALTER TABLE subscription_creation DROP CONSTRAINT FK_3040DA589A1887DC');
        $this->addSql('ALTER TABLE subscription_plan DROP CONSTRAINT FK_EA664B634584665A');
        $this->addSql('ALTER TABLE subscription_plan_subscription_feature DROP CONSTRAINT FK_63CBB01D9B8CE200');
        $this->addSql('ALTER TABLE subscription_plan_subscription_feature DROP CONSTRAINT FK_63CBB01DA201F81C');
        $this->addSql('ALTER TABLE subscription_plan_price DROP CONSTRAINT FK_5B8B27409B8CE200');
        $this->addSql('ALTER TABLE subscription_plan_price DROP CONSTRAINT FK_5B8B2740D614C7E7');
        $this->addSql('ALTER TABLE subscription_plan_limit DROP CONSTRAINT FK_EED5EDF9A201F81C');
        $this->addSql('ALTER TABLE subscription_plan_limit DROP CONSTRAINT FK_EED5EDF99B8CE200');
        $this->addSql('DROP TABLE api_key');
        $this->addSql('DROP TABLE brand_settings');
        $this->addSql('DROP TABLE cancellation_requests');
        $this->addSql('DROP TABLE charge_back');
        $this->addSql('DROP TABLE charge_back_amount_daily_stats');
        $this->addSql('DROP TABLE charge_back_amount_monthly_stats');
        $this->addSql('DROP TABLE charge_back_amount_yearly_stats');
        $this->addSql('DROP TABLE charge_back_creation');
        $this->addSql('DROP TABLE credit');
        $this->addSql('DROP TABLE customers');
        $this->addSql('DROP TABLE email_templates');
        $this->addSql('DROP TABLE expiring_card_process');
        $this->addSql('DROP TABLE forgot_password_code');
        $this->addSql('DROP TABLE generic_background_task');
        $this->addSql('DROP TABLE invite_codes');
        $this->addSql('DROP TABLE invoice');
        $this->addSql('DROP TABLE invoice_subscription');
        $this->addSql('DROP TABLE invoice_payment');
        $this->addSql('DROP TABLE invoice_line');
        $this->addSql('DROP TABLE payment');
        $this->addSql('DROP TABLE payment_subscription');
        $this->addSql('DROP TABLE payment_amount_daily_stats');
        $this->addSql('DROP TABLE payment_amount_monthly_stats');
        $this->addSql('DROP TABLE payment_amount_yearly_stats');
        $this->addSql('DROP TABLE payment_card');
        $this->addSql('DROP TABLE payment_creation');
        $this->addSql('DROP TABLE payment_failure_process');
        $this->addSql('DROP TABLE price');
        $this->addSql('DROP TABLE product');
        $this->addSql('DROP TABLE receipt');
        $this->addSql('DROP TABLE receipt_payment');
        $this->addSql('DROP TABLE receipt_subscription');
        $this->addSql('DROP TABLE receipt_line');
        $this->addSql('DROP TABLE refund');
        $this->addSql('DROP TABLE refund_amount_daily_stats');
        $this->addSql('DROP TABLE refund_amount_monthly_stats');
        $this->addSql('DROP TABLE refund_amount_yearly_stats');
        $this->addSql('DROP TABLE refund_created_process');
        $this->addSql('DROP TABLE settings');
        $this->addSql('DROP TABLE stripe_import');
        $this->addSql('DROP TABLE subscription');
        $this->addSql('DROP TABLE subscription_payment');
        $this->addSql('DROP TABLE subscription_cancellation_daily_stats');
        $this->addSql('DROP TABLE subscription_cancellation_monthly_stats');
        $this->addSql('DROP TABLE subscription_cancellation_yearly_stats');
        $this->addSql('DROP TABLE subscription_creation');
        $this->addSql('DROP TABLE subscription_daily_stats');
        $this->addSql('DROP TABLE subscription_feature');
        $this->addSql('DROP TABLE subscription_monthly_stats');
        $this->addSql('DROP TABLE subscription_plan');
        $this->addSql('DROP TABLE subscription_plan_subscription_feature');
        $this->addSql('DROP TABLE subscription_plan_price');
        $this->addSql('DROP TABLE subscription_plan_limit');
        $this->addSql('DROP TABLE subscription_yearly_stats');
        $this->addSql('DROP TABLE templates');
        $this->addSql('DROP TABLE users');
        $this->addSql('DROP TABLE messenger_messages');
    }
}
