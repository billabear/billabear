# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']


    #####
    ## Parthenon user services
    #####
    Parthenon\User\Factory\EntityFactory: '@App\User\Entity\EntityFactory'
    Parthenon\User\Repository\UserRepositoryInterface: '@App\Repository\UserRepository'
    Parthenon\User\Notification\MessageFactory: '@App\User\Notification\MessageFactory'
    Parthenon\Billing\Repository\CustomerRepositoryInterface: '@App\Repository\CustomerRepository'

    App\Repository\UserRepository:
        arguments:
            $entityRepository: '@app.repository.orm.user'
    app.repository.orm.user:
        class: App\Repository\Orm\UserRepository

    parthenon.user.repository.forgot_password_code_repository:
        class: Parthenon\User\Repository\ForgotPasswordCodeRepository
        arguments:
            - '@App\Repository\Orm\ForgotPasswordCodeRepository'

    parthenon.user.repository.orm.invite_code_repository_doctrine: '@App\Repository\Orm\InviteCodeRepository'


    App\Repository\CustomerRepository:
        arguments:
            $entityRepository: '@app.repository.orm.customer'
    app.repository.orm.customer:
        class: App\Repository\Orm\CustomerRepository

    App\Repository\TemplateRepository:
        arguments:
            $entityRepository: '@app.repository.orm.template'
    app.repository.orm.template:
        class: App\Repository\Orm\TemplateRepository

    App\Repository\CancellationRequestRepository:
        arguments:
            $entityRepository: '@app.repository.orm.cancellation_request'
    app.repository.orm.cancellation_request:
        class: App\Repository\Orm\CancellationRequestRepository

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Customer\ExternalRegisterInterface: '@App\Customer\ObolRegister'