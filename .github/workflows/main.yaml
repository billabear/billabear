name: PHP test

on:
  push:
  pull_request:
  workflow_dispatch:
  repository_dispatch:
      types: [ push ]
  schedule: # Added to ensure build still works daily.
    - cron: '0 2 * * *' # run at 2 AM UTC


jobs:
  code_style:
    name: Code Style
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-versions: [ '8.3', '8.4' ]
        experimental: [false]

    services:
      postgres:
        image: timescale/timescaledb-ha:pg16
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: 'parthenon_test'
          POSTGRES_USER: 'appuser'
          POSTGRES_PASSWORD: 'apppassword'
      redis:
        image: redis

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Runs Elasticsearch
        uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: 8.17.1
          port: 9200
          network-name: elasticsearch
          security-enabled: false

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpunit-bridge
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, pgsql, mongodb, http, apcu
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
      - name: Install dependencies
        run: |
          composer install
      - name: PHP_CS_FIXER_IGNORE_ENV - php 8.2 workaround
        run: echo "PHP_CS_FIXER_IGNORE_ENV=true" >> $GITHUB_ENV
      - name: Code Style
        run: |
          vendor/bin/php-cs-fixer fix src --dry-run

  behat_app_portal:
    needs: code_style
    name: Behat Portal
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-versions: [ '8.3', '8.4' ]
        experimental: [false]

    services:
      postgres:
        image: timescale/timescaledb-ha:pg16
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: 'parthenon_test'
          POSTGRES_USER: 'appuser'
          POSTGRES_PASSWORD: 'apppassword'
      redis:
        image: redis

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Runs Elasticsearch
        uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: 8.17.1
          port: 9200
          network-name: elasticsearch
          security-enabled: false

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpunit-bridge
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, pgsql, mongodb, http, apcu
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
      - name: Install dependencies
        run: |
          composer install

      - name: Behat
        run: |
          vendor/bin/behat -f progress features/Portal

  behat_app_usage:
    needs: code_style
    name: Behat Usage
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-versions: [ '8.3', '8.4' ]
        experimental: [false]

    services:
      postgres:
        image: timescale/timescaledb-ha:pg16
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: 'parthenon_test'
          POSTGRES_USER: 'appuser'
          POSTGRES_PASSWORD: 'apppassword'
      redis:
        image: redis

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Runs Elasticsearch
        uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: 8.17.1
          port: 9200
          security-enabled: false

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpunit-bridge
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, pgsql, mongodb, http, apcu
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
      - name: Install dependencies
        run: |
          composer install
      - name: Behat
        run: |
          vendor/bin/behat -f progress features/Usage

  behat_app_stripe:
    needs: code_style
    name: Behat Stripe
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-versions: [ '8.3', '8.4' ]
        experimental: [false]

    services:
      elasticsearch:
        image: elasticsearch:8.17.1
        env:
          discovery.type: single-node
          xpack.security.enabled: false
          network.host: 0.0.0.0
          indices.id_field_data.enabled: true
        ports:
            - "9200:9200"
            - "9300:9300"
      postgres:
        image: timescale/timescaledb-ha:pg16
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: 'parthenon_test'
          POSTGRES_USER: 'appuser'
          POSTGRES_PASSWORD: 'apppassword'
      redis:
        image: redis

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Runs Elasticsearch
        uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: 8.17.1
          port: 9200

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpunit-bridge
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, pgsql, mongodb, http, apcu
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
      - name: Install dependencies
        run: |
          composer install

      - name: Behat
        run: |
          vendor/bin/behat -f progress features/Stripe

  behat_app_subscriptions:
    needs: code_style
    name: Behat Subscriptions
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-versions: [ '8.3', '8.4' ]
        experimental: [false]

    services:
      postgres:
        image: timescale/timescaledb-ha:pg16
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: 'parthenon_test'
          POSTGRES_USER: 'appuser'
          POSTGRES_PASSWORD: 'apppassword'
      redis:
        image: redis

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Runs Elasticsearch
        uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: 8.17.1
          port: 9200

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpunit-bridge
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, pgsql, mongodb, http, apcu
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

      - name: Install dependencies
        run: |
          composer install

      - name: Behat
        run: |
          vendor/bin/behat -f progress features/Subscriptions

  behat_app_user:
    needs: code_style
    name: Behat User
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-versions: [ '8.3', '8.4' ]
        experimental: [false]

    services:
      postgres:
        image: timescale/timescaledb-ha:pg16
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: 'parthenon_test'
          POSTGRES_USER: 'appuser'
          POSTGRES_PASSWORD: 'apppassword'
      redis:
        image: redis

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Runs Elasticsearch
        uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: 8.17.1
          port: 9200

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpunit-bridge
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, pgsql, mongodb, http, apcu
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
      - name: Install dependencies
        run: |
          composer install

      - name: Behat
        run: |
          vendor/bin/behat -f progress features/User

  behat_tax:
    needs: code_style
    name: Behat Tax
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-versions: [ '8.3', '8.4' ]
        experimental: [false]

    services:
      postgres:
        image: timescale/timescaledb-ha:pg16
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: 'parthenon_test'
          POSTGRES_USER: 'appuser'
          POSTGRES_PASSWORD: 'apppassword'
      redis:
        image: redis

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Runs Elasticsearch
        uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: 8.17.1
          port: 9200

      - name: Create all the databases
        run: psql -h localhost -d parthenon_test -U appuser -f docker/database/init.sql
        env:
          PGPASSWORD: apppassword
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpunit-bridge
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, pgsql, mongodb, http, apcu
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
      - name: Install dependencies
        run: |
          composer install

      - name: Behat
        run: |
          vendor/bin/behat -f progress features/Tax

  behat_system:
    needs: code_style
    name: Behat System
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-versions: [ '8.3', '8.4' ]
        experimental: [false]

    services:
      postgres:
        image: timescale/timescaledb-ha:pg16
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: 'parthenon_test'
          POSTGRES_USER: 'appuser'
          POSTGRES_PASSWORD: 'apppassword'
      redis:
        image: redis

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Runs Elasticsearch
        uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: 8.17.1
          port: 9200

      - name: Create all the databases
        run: psql -h localhost -d parthenon_test -U appuser -f docker/database/init.sql
        env:
          PGPASSWORD: apppassword
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpunit-bridge
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, pgsql, mongodb, http, apcu
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
      - name: Install dependencies
        run: |
          composer install

      - name: Behat
        run: |
          vendor/bin/behat -f progress features/System

  behat_workflows:
    needs: code_style
    name: Behat Workflows
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-versions: [ '8.3', '8.4' ]
        experimental: [false]

    services:
      postgres:
        image: timescale/timescaledb-ha:pg16
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: 'parthenon_test'
          POSTGRES_USER: 'appuser'
          POSTGRES_PASSWORD: 'apppassword'
      redis:
        image: redis

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Runs Elasticsearch
        uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: 8.17.1
          port: 9200

      - name: Create all the databases
        run: psql -h localhost -d parthenon_test -U appuser -f docker/database/init.sql
        env:
          PGPASSWORD: apppassword
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpunit-bridge
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, pgsql, mongodb, http, apcu
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
      - name: Install dependencies
        run: |
          composer install

      - name: Behat
        run: |
          vendor/bin/behat -f progress features/Workflows

  behat_invoice:
    needs: code_style
    name: Behat Invoice
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-versions: [ '8.3', '8.4' ]
        experimental: [false]

    services:
      postgres:
        image: timescale/timescaledb-ha:pg16
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: 'parthenon_test'
          POSTGRES_USER: 'appuser'
          POSTGRES_PASSWORD: 'apppassword'
      redis:
        image: redis

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Runs Elasticsearch
        uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: 8.17.1
          port: 9200

      - name: Create all the databases
        run: psql -h localhost -d parthenon_test -U appuser -f docker/database/init.sql
        env:
          PGPASSWORD: apppassword
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpunit-bridge
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, pgsql, mongodb, http, apcu
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
      - name: Install dependencies
        run: |
          composer install

      - name: Behat
        run: |
          vendor/bin/behat -f progress features/Invoice

      - name: Behat logs
        if: ${{ failure() }}
        run: |
          cat var/log/test.log
          exit 1


  behat_app_background:
    needs: code_style
    name: Behat Background
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-versions: [ '8.3', '8.4' ]
        experimental: [false]

    services:
      postgres:
        image: timescale/timescaledb-ha:pg16
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: 'parthenon_test'
          POSTGRES_USER: 'appuser'
          POSTGRES_PASSWORD: 'apppassword'
      redis:
        image: redis

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Runs Elasticsearch
        uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: 8.17.1
          port: 9200

      - name: Create all the databases
        run: psql -h localhost -d parthenon_test -U appuser -f docker/database/init.sql
        env:
          PGPASSWORD: apppassword
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpunit-bridge
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, pgsql, mongodb, http, apcu
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
      - name: Install dependencies
        run: |
          composer install

      - name: Behat
        run: |
          vendor/bin/behat -f progress features/Background

  behat_stats:
    needs: code_style
    name: Behat Stats
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-versions: [ '8.3', '8.4' ]
        experimental: [false]

    services:
      postgres:
        image: timescale/timescaledb-ha:pg16
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: 'parthenon_test'
          POSTGRES_USER: 'appuser'
          POSTGRES_PASSWORD: 'apppassword'
      redis:
        image: redis

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Runs Elasticsearch
        uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: 8.17.1
          port: 9200

      - name: Create all the databases
        run: psql -h localhost -d parthenon_test -U appuser -f docker/database/init.sql
        env:
          PGPASSWORD: apppassword
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpunit-bridge
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, pgsql, mongodb, http, apcu
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
      - name: Install dependencies
        run: |
          composer install

      - name: Behat
        run: |
          vendor/bin/behat -f progress features/Stats

  behat_app_app:
    needs: code_style
    name: Behat APP
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-versions: [ '8.3', '8.4' ]
        experimental: [false]

    services:
      postgres:
        image: timescale/timescaledb-ha:pg16
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: 'parthenon_test'
          POSTGRES_USER: 'appuser'
          POSTGRES_PASSWORD: 'apppassword'
      redis:
        image: redis

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Runs Elasticsearch
        uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: 8.17.1
          port: 9200

      - name: Create all the databases
        run: psql -h localhost -d parthenon_test -U appuser -f docker/database/init.sql
        env:
          PGPASSWORD: apppassword
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpunit-bridge
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, pgsql, mongodb, http, apcu
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
      - name: Install dependencies
        run: |
          composer install

      - name: Behat
        run: |
          vendor/bin/behat -f progress features/App

  behat_api:
    needs: code_style
    name: Behat API
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-versions: [ '8.3', '8.4' ]
        experimental: [false]

    services:
      postgres:
        image: timescale/timescaledb-ha:pg16
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: 'parthenon_test'
          POSTGRES_USER: 'appuser'
          POSTGRES_PASSWORD: 'apppassword'
      redis:
        image: redis

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Runs Elasticsearch
        uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: 8.17.1
          port: 9200

      - name: Create all the databases
        run: psql -h localhost -d parthenon_test -U appuser -f docker/database/init.sql
        env:
          PGPASSWORD: apppassword
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpunit-bridge
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, pgsql, mongodb, http, apcu
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
      - name: Install dependencies
        run: |
          composer install

      - name: Behat
        run: |
          vendor/bin/behat -f progress features/Api

  front_end:
    needs: code_style
    name: Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Runs Elasticsearch
        uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: 8.17.1
          port: 9200

      - name: Set Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 17.x

      - name: Install yarn
        uses: borales/actions-yarn@v3.0.0
        with:
          cmd: install

      - name: encore
        uses: borales/actions-yarn@v3.0.0
        with:
          cmd: encore production

      - name: Run vitest
        uses: borales/actions-yarn@v3.0.0
        with:
          cmd: vitest

  phpunit:
    needs: code_style
    name: PHPUnit
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-versions: [ '8.3', '8.4' ]
        experimental: [false]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Runs Elasticsearch
        uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: 8.17.1
          port: 9200

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpunit-bridge
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, pgsql, mongodb, http, apcu
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
      - name: Install dependencies
        run: |
          composer install
      - name: PHPUnit
        run: |
          vendor/bin/phpunit
